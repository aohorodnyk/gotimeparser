run:
  modules-download-mode: readonly # Do not update dependencies.
linters-settings:
  varnamelen:
    min-name-length: 2
  tagliatelle:
    # Check the struck tag name case.
    case:
      # Use the struct field name to check the name of the struct tag.
      # Default: false
      use-field-name: true
      rules:
        # Any struct tag type can be used.
        # Support string case: `camel`, `pascal`, `kebab`, `snake`, `goCamel`, `goPascal`, `goKebab`, `goSnake`, `upper`, `lower`
        json: snake

linters:
  disable-all: true
  enable:
    # Default linters
    - errcheck
    - gosimple
    - govet
    - ineffassign
    - staticcheck
    - typecheck
    - unused
    # Additional linters
    - asasalint
    - asciicheck
    - bidichk
    - bodyclose
    - containedctx
    - contextcheck
    - cyclop
    - decorder
    - depguard
    - dogsled
    - dupl
    - dupword
    - durationcheck
    - errchkjson
    - errname
    - errorlint
    - execinquery
    - exhaustive
    - exhaustruct
    - exportloopref
    - forbidigo
    - forcetypeassert
    - funlen
    - gci
    # - ginkgolinter # Will be enabled in 1.51.
    # - gocheckcompilerdirectives # Will be enabled in 1.51.
    - gochecknoglobals
    - gochecknoinits
    - gocognit
    - goconst
    - gocritic
    - gocyclo
    - godot
    - godox
    - goerr113
    - gofmt
    - gofumpt
    - goheader
    - goimports
    - gomnd
    - gomoddirectives
    - gomodguard
    - goprintffuncname
    - gosec
    - grouper
    - importas
    - interfacebloat
    # - ireturn # Does not support generics, see https://github.com/butuzov/ireturn/issues/39.
    - lll
    - loggercheck
    - maintidx
    - makezero
    - misspell
    # - musttag # Will be enabled in 1.51.
    - nakedret
    - nestif
    - nilerr
    - nilnil
    - nlreturn
    - noctx
    # - nolintlint # Let's keed nolintlint if we decide to add it.
    # - nonamedreturns # This linter does not make any sense.
    - nosprintfhostport
    - paralleltest
    - prealloc
    - predeclared
    - promlinter
    - reassign
    - revive
    - rowserrcheck
    - sqlclosecheck
    - stylecheck
    - tagliatelle
    - tenv
    - testableexamples
    - testpackage
    - thelper
    - tparallel
    - unconvert
    - unparam
    - usestdlibvars
    - varnamelen
    - wastedassign
    - whitespace
    - wrapcheck
    - wsl
issues:
    exclude-rules:
      - path: _test\.go
        linters:
          - dupl
          - funlen
      - path: doc\.go
        linters:
          - lll
      - path: constraints\/constraints_test\.go
        linters:
          - gocritic
          - wsl
          - gochecknoglobals
          - varnamelen
          - gosec
          - cyclop
          - unconvert
          - paralleltest
          - tparallel
          - unused
      - path: types\/caster_example_test\.g
        linters:
          - dupword

# golangci.com configuration
# https://github.com/golangci/golangci/wiki/Configuration
service:
  golangci-lint-version: 1.51.x # use the fixed version to not introduce new linters unexpectedly
